---
- name: Get corosync processes
  shell: "ps -ef | grep -v grep | grep -w corosync | awk '{print $2}'"
  register: corosync_processes

- name: Kill corosync processes
  shell: "kill {{ item }}"
  with_items: "{{ corosync_processes.stdout_lines }}"

- wait_for:
    path: "/proc/{{ item }}/status"
    state: absent
  with_items: "{{ corosync_processes.stdout_lines }}"
  ignore_errors: yes
  register: killed_processes

- name: Force kill stuck processes (corosync)
  shell: "kill -9 {{ item }}"
  with_items: "{{ killed_processes.results | select('failed') | map(attribute='item') | list }}"

- name: "Stop Cluster services"
  ansible.builtin.command: pcs cluster stop --all
  changed_when: false
  when: "'pacemaker' in ansible_facts.packages"

- name: "Uninstall Pacemaker Packages"
  ansible.builtin.apt:
    name:
      - pacemaker
      - pacemaker-common
      - pcs
      - fence-agents
      - resource-agents-paf
    state: absent
    purge: true
    autoremove: true

- name: "Remove Pacemaker artifacts"
  ansible.builtin.file:
    state: absent
    name: "{{ item }}"
  with_items:
    - /tmp/configure_pacemaker.sh
    - /tmp/pacemaker_auth
    - /etc/tmpfiles.d/postgresql-part.conf
    - /etc/ssh/sshd_config.d/pacemaker_sshd.conf
    - "{{ maas_pacemaker_tmp_cib|d(false) }}"
    - /etc/systemd/system/ha_cluster_exporter.service
    - "{{ ha_exp_dir }}"
